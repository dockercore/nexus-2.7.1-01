<?xml version="1.0"?>
<!--

    Sonatype Nexus (TM) Open Source Version
    Copyright (c) 2007-2013 Sonatype, Inc.
    All rights reserved. Includes the third-party code listed at http://links.sonatype.com/products/nexus/oss/attributions.

    This program and the accompanying materials are made available under the terms of the Eclipse Public License Version 1.0,
    which accompanies this distribution and is available at http://www.eclipse.org/legal/epl-v10.html.

    Sonatype Nexus (TM) Professional Version is available from Sonatype, Inc. "Sonatype" and "Sonatype Nexus" are trademarks
    of Sonatype, Inc. Apache Maven is a trademark of the Apache Software Foundation. M2eclipse is a trademark of the
    Eclipse Foundation. All other trademarks are the property of their respective owners.

-->
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">

<!-- ============================================================ -->
<!--                                                              -->
<!-- For help using this configuration, see:                      -->
<!--                                                              -->
<!--   http://links.sonatype.com/products/nexus/oss/docs-jetty    -->
<!--                                                              -->
<!-- ============================================================ -->
<Configure id="Server" class="org.eclipse.jetty.server.Server">

  <Set name="threadPool">
    <New class="com.yammer.metrics.jetty.InstrumentedQueuedThreadPool"/>
  </Set>

  <Call name="addConnector">
    <Arg>
      <New class="org.sonatype.nexus.bootstrap.jetty.InstrumentedSelectChannelConnector">
        <Set name="host">${application-host}</Set>
        <Set name="port">${application-port}</Set>
        <Set name="forwarded">true</Set>
      </New>
    </Arg>
  </Call>

  <New id="NexusHandler" class="com.yammer.metrics.jetty.InstrumentedHandler">
    <Arg>
      <New id="NexusWebAppContext" class="org.eclipse.jetty.webapp.WebAppContext">
        <Arg>${nexus-webapp}</Arg>
        <Arg>${nexus-webapp-context-path}</Arg>
        <Set name="extractWAR">false</Set>
        <Set name="throwUnavailableOnStartupException">true</Set>
      </New>
    </Arg>
  </New>

  <Set name="handler">
    <New id="Handlers" class="org.eclipse.jetty.server.handler.HandlerCollection">
      <Call name="addHandler">
        <Arg>
          <Ref id="NexusHandler"/>
        </Arg>
      </Call>
    </New>
  </Set>

  <Set name="stopAtShutdown">true</Set>
  <Set name="sendServerVersion">true</Set>
  <Set name="sendDateHeader">true</Set>
  <Set name="gracefulShutdown">1000</Set>

  <!--
  ==== JMX ====
  Set the following inside nexus.properties:
  jmx-host: the remote host name, commonly the IP address, to remotely access Nexus over JMX
  jmx-port: the port to remotely access Nexus over JMX (1099)
  -->

  <!-- explicitly setting rmi server hostname as IP address here can help avoid network routing issues -->
  <Call name="setProperty" class="java.lang.System">
    <Arg>java.rmi.server.hostname</Arg>
    <Arg>${jmx-host}</Arg>
  </Call>

  <!-- WARNING defaulting convenience over security; expose JMX to any remote host with no ssl/auth -->
  <Call name="setProperty" class="java.lang.System">
    <Arg>com.sun.management.jmxremote.ssl</Arg>
    <Arg>
      <SystemProperty name="com.sun.management.jmxremote.ssl" default="false"/>
    </Arg>
  </Call>
  <Call name="setProperty" class="java.lang.System">
    <Arg>com.sun.management.jmxremote.authenticate</Arg>
    <Arg>
      <SystemProperty name="com.sun.management.jmxremote.authenticate" default="false"/>
    </Arg>
  </Call>

  <Call name="createRegistry" class="java.rmi.registry.LocateRegistry">
    <Arg type="java.lang.Integer">${jmx-port}</Arg>
    <Call name="sleep" class="java.lang.Thread">
      <Arg type="java.lang.Integer">1000</Arg>
    </Call>
  </Call>

  <New id="ConnectorServer" class="org.eclipse.jetty.jmx.ConnectorServer">
    <Arg>
      <New class="javax.management.remote.JMXServiceURL">
        <Arg type="java.lang.String">rmi</Arg>
        <Arg type="java.lang.String"/>
        <Arg type="java.lang.Integer">${jmx-port}</Arg>
        <Arg type="java.lang.String">/jndi/rmi://${jmx-host}:${jmx-port}/jmxrmi</Arg>
      </New>
    </Arg>
    <Arg>org.eclipse.jetty:name=rmiconnectorserver</Arg>
    <Call name="start"/>
  </New>

</Configure>
